name: Release Drafter

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  upload-plugins-artifact:
    permissions:
      contents: write
      pull-requests: write
    
    strategy:
      matrix:
        runs-on: [windows-latest,  macos-latest, ubuntu-latest, ]
    runs-on: ${{ matrix.runs-on }}

    env:
      Builder: 1

    steps:
      - uses: actions/checkout@v3

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Install CMake
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: execute python
        run: python ExternalTools/BuildScripts/build_flatbuffers.py

      - name: Build Godot
        run: python ExternalTools/BuildScripts/build_godot.py

      - name: Upload Artifact Godot
        uses: actions/upload-artifact@v3
        with:
          name: Artifact-Godot-Plugin
          path: Plugins/Godot/project/addons

      - name: Upload Artifact UnrealEngine
        uses: actions/upload-artifact@v3
        with:
          name: Artifact-UnrealEngine-Plugin
          path: Plugins/UnrealEngine

  upload-app-artifact:
    permissions:
      contents: write
      pull-requests: write

    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x
          
      - name: Build C# application
        run: dotnet build Application/BocchiTracker.WPF.sln -c Release

      - name: Upload Artifact Application
        uses: actions/upload-artifact@v3
        with:
          name: Artifact-BocchiTracker
          path: Application/WPF/Artifact/Release/net7.0-windows

  # create_draft_release:
  #   permissions:
  #     contents: write
  #     pull-requests: write

  #   runs-on: windows-latest

  #   steps:
  #     - name: Delete drafts
  #       uses: hugo19941994/delete-draft-releases@v1.0.0
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  #     - name: Create release draft
  #       uses: release-drafter/release-drafter@v5
  #       id: create_draft
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Archive UnrealEngine plugin
  #       run: Compress-Archive -Path "Plugins/UnrealEngine" -DestinationPath "UnrealEngine.zip"

  #     - name: Archive Unity plugin
  #       run: Compress-Archive -Path "Plugins/Unity" -DestinationPath "Unity.zip"

  #     - name: Archive Godot plugin
  #       run: Compress-Archive -Path "Plugins/Godot" -DestinationPath "Godot.zip"

  #     - name: Upload Application 
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_draft.outputs.upload_url }} 
  #         asset_path: ./BocchiTracker.zip
  #         asset_name: BocchiTracker.zip
  #         asset_content_type: application/zip
          
  #     - name: Upload UnrealEngine plugin 
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_draft.outputs.upload_url }} 
  #         asset_path: ./UnrealEngine.zip
  #         asset_name: UnrealEngine.zip
  #         asset_content_type: application/zip

  #     - name: Upload Unity plugin
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_draft.outputs.upload_url }} 
  #         asset_path: ./Unity.zip
  #         asset_name: Unity.zip
  #         asset_content_type: application/zip

  #     - name: Upload Godot plugin
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_draft.outputs.upload_url }} 
  #         asset_path: ./Godot.zip
  #         asset_name: Godot.zip
  #         asset_content_type: application/zip
