<UserControl x:Class="BocchiTracker.Client.Controls.MultipleChoice"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BocchiTracker.Client.Controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" d:Width="300">
    <Grid Margin="5,0,5,5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="0.45*"/>
        </Grid.ColumnDefinitions>
        <Border Grid.ColumnSpan="2" BorderBrush="Gray" BorderThickness="0,0,0,1"/>
        <Grid>
            <ItemsControl ItemsSource="{Binding ViewModel.RegisteredItems, RelativeSource={RelativeSource AncestorType=local:MultipleChoice}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <materialDesign:Chip
                                          Foreground="White"
                                          Background="LightSeaGreen"
                                          DeleteCommandParameter="{Binding}"
                                          Content="{Binding}" 
                                          DeleteCommand="{Binding ViewModel.DeleteRegisterdItemCommand, RelativeSource={RelativeSource AncestorType=local:MultipleChoice}}"
                                          IsDeletable="True">
                            </materialDesign:Chip>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
        <ComboBox 
            Grid.Column="1"
            x:Name="comboBox"
            ItemsSource="{Binding ViewModel.FilteredItems, RelativeSource={RelativeSource AncestorType=local:MultipleChoice}}"
            SelectedItem="{Binding ViewModel.Selected.Value, RelativeSource={RelativeSource AncestorType=local:MultipleChoice}}"
            Text="{Binding ViewModel.EditText.Value, RelativeSource={RelativeSource AncestorType=local:MultipleChoice}}"
            Foreground="White"
            IsDropDownOpen="{Binding ViewModel.IsOpen.Value, RelativeSource={RelativeSource AncestorType=local:MultipleChoice}}"
            IsTextSearchEnabled="False"
            IsEditable="True"
            StaysOpenOnEdit="True"
            Style="{StaticResource MaterialDesignFloatingHintComboBox}"
            materialDesign:HintAssist.Hint="{Binding ViewModel.HintText.Value, RelativeSource={RelativeSource AncestorType=local:MultipleChoice}}"
            FontSize="16" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
            ItemTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource AncestorType=local:MultipleChoice}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="GotFocus">
                    <i:InvokeCommandAction Command="{Binding ViewModel.ShowItemCommand, RelativeSource={RelativeSource AncestorType=local:MultipleChoice}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ComboBox.InputBindings>
                <KeyBinding Command="{Binding ViewModel.ReturnKeyCommand, RelativeSource={RelativeSource AncestorType=local:MultipleChoice}}" CommandParameter="{Binding Text, ElementName=comboBox}" Key="Return" />
            </ComboBox.InputBindings>
        </ComboBox>
    </Grid>
</UserControl>
